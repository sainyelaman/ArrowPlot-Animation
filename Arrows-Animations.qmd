---
title: "Untitled"
format: html
editor: visual
---

## Community Contribution

by Yelaman Sain and Ethan Olivier

```{r}
# Importing libraries

library(ggplot2)
library(gganimate)
library(ggalluvial)
library(dplyr)
library(gifski)
```

```{r}
# Reading in the dataset from a csv

happiness = read.csv("World Happiness Report.csv")
head(happiness)
```

```{r}
# Splitting the numerical ladder score into three cateogries after 
# looking at the distribution of the feature and spitting into roughly equal size bins.

threshold_low = 4.65
threshold_medium = 6

happiness$LadderCategory <- cut(happiness$Life.Ladder, 
                                breaks = c(-Inf, threshold_low, threshold_medium, Inf), 
                                labels = c("Low", "Medium", "High"), include.lowest = TRUE)

head(happiness)
```

```{r}
# Reordering the columns for ease of use.

new_order <- c(1, 3, 4, 14, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13)

new_happiness <- happiness[, new_order]
new_happiness
```

```{r}
# Removing countries that do not have entries for years between 2010 and 2020.

filtered_data <- new_happiness %>%
  group_by(Country.Name) %>%
  filter(all(2010:2020 %in% Year)) %>%
  ungroup() %>%
  filter(Year >= 2010 & Year <= 2020) 

head(filtered_data)
```

```{r}
# Making an alluvial plot between 2010 and 2020. 
# We save two dataframes separately for 2010 and 2020, and combine them again to plot.

A <- filtered_data$LadderCategory[filtered_data$Year == 2010]
B <- filtered_data$LadderCategory[filtered_data$Year == 2020]

length(A)
length(B)

df <- data.frame(A, B)

ggplot(df, aes(axis1 = A, axis2 = B)) + 
  geom_alluvium(aes(fill=A)) +
  geom_stratum() +
  scale_fill_manual(values = c("#D3190D", "#FFDE57", "#38B70C")) +
  labs(title = 'Change in Ladder Score between 2010 and 2020', fill ='Legend Color') +
  geom_text(aes(label = B), stat = "stratum", size = 5) +
  geom_text(aes(label = A), stat = "stratum", size = 5) +
  scale_x_discrete(labels = c("2010", "2020")) +
  theme_void()
```

```{r}
# Scatter plot for 2010

data2010 = filtered_data[filtered_data$Year == 2010,]

scatter_2010 <- ggplot(data2010, aes(x = Log.GDP.Per.Capita, y = Perceptions.Of.Corruption)) +
  geom_point(aes(color = LadderCategory)) +
  scale_color_manual(values = c("#D3190D", "#FFDE57", "#38B70C")) +
  labs(title = 'Year: 2010', x = 'Log GDP per capita', y = 'Perception of Corruption') 

scatter_2010
```

```{r}
# Scatter plot for 2020 and showing arrows for where these points shifted from in 2010.

data2010 = filtered_data[filtered_data$Year == 2010,]
data2020 = filtered_data[filtered_data$Year == 2020,]

arrow_data <- data.frame(xstart = data2010$Log.GDP.Per.Capita,
                         ystart = data2010$Perceptions.Of.Corruption,
                         xend = data2020$Log.GDP.Per.Capita,
                         yend = data2020$Perceptions.Of.Corruption)

first_arrow_plot <- ggplot(data2020, aes(x = Log.GDP.Per.Capita, y = Perceptions.Of.Corruption)) +
  geom_point(aes(color = LadderCategory)) +
  scale_color_manual(values = c("#D3190D", "#FFDE57", "#38B70C")) +
  labs(title = 'Year: 2020', x = 'Log GDP per capita', y = 'Perception of Corruption') +
  geom_curve(data = arrow_data, aes(x = xstart, y = ystart, xend = xend, yend = yend),
               arrow = arrow(length = unit(0.25, "cm")), color = "grey") +
  xlim(5, 12) +
  ylim(0, 1)

first_arrow_plot
```

```{r}
# Made the previous chart better by:
# 
# 1) removed arrows for those di not have a change of category
# 
# 2) added color to the arrow to represent the previous category.
# 
# 3) made the arrows straight, so it is easier to see the change in the numerical features.
#    The distance shift from previous location.

df_combined <- inner_join(data2010, data2020, by = "Country.Name") %>%
  filter(data2010$LadderCategory != data2020$LadderCategory)

arrow_data <- data.frame(
  xstart = df_combined$Log.GDP.Per.Capita.x,
  ystart = df_combined$Perceptions.Of.Corruption.x,
  xend = df_combined$Log.GDP.Per.Capita.y,
  yend = df_combined$Perceptions.Of.Corruption.y
)


final_arrow_plot <- ggplot(data2020, aes(x = Log.GDP.Per.Capita, y = Perceptions.Of.Corruption)) +
  geom_point(aes(color = LadderCategory)) +
  scale_color_manual(values = c("#D3190D", "#FFDE57", "#38B70C")) +
  geom_segment(data = arrow_data, 
               aes(x = xstart, y = ystart, xend = xend, yend = yend, color = df_combined$LadderCategory.x),
               arrow = arrow(length = unit(0.25, "cm"))) +
  labs(title = 'Year: 2020', x = 'Log GDP per capita', y = 'Perception of Corruption') +
  xlim(5, 12) +
  ylim(0, 1)

final_arrow_plot
```

```{r}
# Making an animation between 2010 and 2020.

animation <- ggplot(filtered_data, 
                    aes(x = Log.GDP.Per.Capita, y = Perceptions.Of.Corruption, group = Country.Name)) +
  geom_point(aes(color = LadderCategory)) +
  scale_color_manual(values = c("#D3190D", "#FFDE57", "#38B70C")) +
  labs(title = 'Year: {frame_time}', x = 'Log GDP per capita', y = 'Perception of Corruption') +
  transition_time(Year) +
  shadow_wake(wake_length = 0.1, alpha = FALSE) +
  xlim(5, 12) +
  ylim(0, 1)

animate(animation, fps = 5, width =600,height=400)

```
